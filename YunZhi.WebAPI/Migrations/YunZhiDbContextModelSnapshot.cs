// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YunZhi.Service.Models;

namespace YunZhi.WebAPI.Migrations
{
    [DbContext(typeof(YunZhiDbContext))]
    partial class YunZhiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("YunZhi.Service.Models.Authorities.Menu", b =>
                {
                    b.Property<int>("Sequence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Id")
                        .HasColumnType("varchar(32) CHARACTER SET utf8mb4")
                        .HasMaxLength(32);

                    b.Property<bool>("IsInside")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ParentId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Path")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Sequence");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("YunZhi.Service.Models.Authorities.Operation", b =>
                {
                    b.Property<int>("Sequence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Id")
                        .HasColumnType("varchar(32) CHARACTER SET utf8mb4")
                        .HasMaxLength(32);

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("OperationGroupId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("OperationGroupSequence")
                        .HasColumnType("int");

                    b.Property<string>("Tips")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Sequence");

                    b.HasIndex("OperationGroupSequence");

                    b.ToTable("Operations");
                });

            modelBuilder.Entity("YunZhi.Service.Models.Authorities.OperationGroup", b =>
                {
                    b.Property<int>("Sequence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("varchar(32) CHARACTER SET utf8mb4")
                        .HasMaxLength(32);

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Sequence");

                    b.ToTable("OperationGroups");
                });

            modelBuilder.Entity("YunZhi.Service.Models.Authorities.Permission", b =>
                {
                    b.Property<int>("Sequence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("varchar(32) CHARACTER SET utf8mb4")
                        .HasMaxLength(32);

                    b.Property<int>("PermissionType")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Sequence");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("YunZhi.Service.Models.Authorities.PermissionMenu", b =>
                {
                    b.Property<int>("Sequence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Id")
                        .HasColumnType("varchar(32) CHARACTER SET utf8mb4")
                        .HasMaxLength(32);

                    b.Property<string>("MenuId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("MenuSequence")
                        .HasColumnType("int");

                    b.Property<string>("PermissionId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("PermissionSequence")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Sequence");

                    b.HasIndex("MenuSequence");

                    b.HasIndex("PermissionSequence");

                    b.ToTable("PermissionMenus");
                });

            modelBuilder.Entity("YunZhi.Service.Models.Authorities.PermissionOperation", b =>
                {
                    b.Property<int>("Sequence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Id")
                        .HasColumnType("varchar(32) CHARACTER SET utf8mb4")
                        .HasMaxLength(32);

                    b.Property<string>("OperationId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("OperationSequence")
                        .HasColumnType("int");

                    b.Property<string>("PermissionId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("PermissionSequence")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Sequence");

                    b.HasIndex("OperationSequence");

                    b.HasIndex("PermissionSequence");

                    b.ToTable("PermissionOperations");
                });

            modelBuilder.Entity("YunZhi.Service.Models.Authorities.Role", b =>
                {
                    b.Property<int>("Sequence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Id")
                        .HasColumnType("varchar(32) CHARACTER SET utf8mb4")
                        .HasMaxLength(32);

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Remarks")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Sequence");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("YunZhi.Service.Models.Authorities.RolePermission", b =>
                {
                    b.Property<int>("Sequence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Id")
                        .HasColumnType("varchar(32) CHARACTER SET utf8mb4")
                        .HasMaxLength(32);

                    b.Property<string>("PermissionId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("PermissionSequence")
                        .HasColumnType("int");

                    b.Property<string>("RoleId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("RoleSequence")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Sequence");

                    b.HasIndex("PermissionSequence");

                    b.HasIndex("RoleSequence");

                    b.ToTable("RolePermissions");
                });

            modelBuilder.Entity("YunZhi.Service.Models.Authorities.User", b =>
                {
                    b.Property<int>("Sequence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Id")
                        .HasColumnType("varchar(32) CHARACTER SET utf8mb4")
                        .HasMaxLength(32);

                    b.Property<string>("Password")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("RealName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Sequence");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("YunZhi.Service.Models.Authorities.UserGroup", b =>
                {
                    b.Property<int>("Sequence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Id")
                        .HasColumnType("varchar(32) CHARACTER SET utf8mb4")
                        .HasMaxLength(32);

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Remarks")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Sequence");

                    b.ToTable("UserGroups");
                });

            modelBuilder.Entity("YunZhi.Service.Models.Authorities.UserGroupRole", b =>
                {
                    b.Property<int>("Sequence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Id")
                        .HasColumnType("varchar(32) CHARACTER SET utf8mb4")
                        .HasMaxLength(32);

                    b.Property<string>("RoleId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("RoleSequence")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserGroupId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("UserGroupSequence")
                        .HasColumnType("int");

                    b.HasKey("Sequence");

                    b.HasIndex("RoleSequence");

                    b.HasIndex("UserGroupSequence");

                    b.ToTable("UserGroupRoles");
                });

            modelBuilder.Entity("YunZhi.Service.Models.Authorities.UserGroupUser", b =>
                {
                    b.Property<int>("Sequence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Id")
                        .HasColumnType("varchar(32) CHARACTER SET utf8mb4")
                        .HasMaxLength(32);

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserGroupId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("UserGroupSequence")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("UserSequence")
                        .HasColumnType("int");

                    b.HasKey("Sequence");

                    b.HasIndex("UserGroupSequence");

                    b.HasIndex("UserSequence");

                    b.ToTable("UserGroupUsers");
                });

            modelBuilder.Entity("YunZhi.Service.Models.Authorities.UserRole", b =>
                {
                    b.Property<int>("Sequence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Id")
                        .HasColumnType("varchar(32) CHARACTER SET utf8mb4")
                        .HasMaxLength(32);

                    b.Property<string>("RoleId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("RoleSequence")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("UserSequence")
                        .HasColumnType("int");

                    b.HasKey("Sequence");

                    b.HasIndex("RoleSequence");

                    b.HasIndex("UserSequence");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("YunZhi.Service.Models.Authorities.Operation", b =>
                {
                    b.HasOne("YunZhi.Service.Models.Authorities.OperationGroup", "OperationGroup")
                        .WithMany("Operations")
                        .HasForeignKey("OperationGroupSequence");
                });

            modelBuilder.Entity("YunZhi.Service.Models.Authorities.PermissionMenu", b =>
                {
                    b.HasOne("YunZhi.Service.Models.Authorities.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuSequence");

                    b.HasOne("YunZhi.Service.Models.Authorities.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionSequence");
                });

            modelBuilder.Entity("YunZhi.Service.Models.Authorities.PermissionOperation", b =>
                {
                    b.HasOne("YunZhi.Service.Models.Authorities.Operation", "Operation")
                        .WithMany()
                        .HasForeignKey("OperationSequence");

                    b.HasOne("YunZhi.Service.Models.Authorities.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionSequence");
                });

            modelBuilder.Entity("YunZhi.Service.Models.Authorities.RolePermission", b =>
                {
                    b.HasOne("YunZhi.Service.Models.Authorities.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionSequence");

                    b.HasOne("YunZhi.Service.Models.Authorities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleSequence");
                });

            modelBuilder.Entity("YunZhi.Service.Models.Authorities.UserGroupRole", b =>
                {
                    b.HasOne("YunZhi.Service.Models.Authorities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleSequence");

                    b.HasOne("YunZhi.Service.Models.Authorities.UserGroup", "UserGroup")
                        .WithMany()
                        .HasForeignKey("UserGroupSequence");
                });

            modelBuilder.Entity("YunZhi.Service.Models.Authorities.UserGroupUser", b =>
                {
                    b.HasOne("YunZhi.Service.Models.Authorities.UserGroup", "UserGroup")
                        .WithMany()
                        .HasForeignKey("UserGroupSequence");

                    b.HasOne("YunZhi.Service.Models.Authorities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserSequence");
                });

            modelBuilder.Entity("YunZhi.Service.Models.Authorities.UserRole", b =>
                {
                    b.HasOne("YunZhi.Service.Models.Authorities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleSequence");

                    b.HasOne("YunZhi.Service.Models.Authorities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserSequence");
                });
#pragma warning restore 612, 618
        }
    }
}
